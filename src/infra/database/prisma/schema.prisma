generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id               String    @id @default(cuid())
  username         String
  email            String    @unique
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  hasEmailVerified Boolean   @default(false) @map("has_email_verified")
  lastLoggedInDate DateTime? @map("last_logged_in_date")

  ownedApplications Application[]
  issuedOTPs        OTP[]

  @@map("accounts")
}

model Application {
  id              String           @id @default(cuid())
  name            String // must unique under one account
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  description     String?
  routeName       String           @unique @map("route_name") // application's route name to access and must unique across the whole app
  ownerId         String           @map("owner_id")
  ownerAccount    Account          @relation(fields: [ownerId], references: [id])
  applicationKeys ApplicationKey[]

  applicationLogs ApplicationLog[]

  @@map("applications")
}

// key store for access application
model ApplicationKey {
  id          String   @id @default(cuid())
  name        String?
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  credential  String
  isDisable   Boolean  @default(false) @map("is_disable")

  applicationId String      @map("application_id")
  application   Application @relation(fields: [applicationId], references: [id])

  appliationLogs ApplicationLog[]

  @@map("application_keys")
}

enum OTPPurpose {
  ACCOUNT_VERIFY
}

// OTP for various actions
model OTP {
  id         Int        @id @default(autoincrement())
  code       String
  purpose    OTPPurpose
  hasClaimed Boolean    @default(false) @map("has_claimed")
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  expiredAt  DateTime   @map("expired_at")

  accountId String  @map("account_id")
  account   Account @relation(fields: [accountId], references: [id])

  @@map("otps")
}


enum LogType {
  INFO
  WARNING
  ERROR
}

model ApplicationLog {
  id String @id @default(cuid())
  logType LogType @map("log_type") 
  message String
  detailContent String? @map("detail_content")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  applicationId String @map("application_id")
  application Application @relation(fields: [applicationId], references: [id])

  requestedKeyId String @map("requested_key_id")
  requestedKey ApplicationKey @relation(fields: [requestedKeyId] , references: [id])

  metadata Json? @map("meta_data")
  @@map("application_logs")
}